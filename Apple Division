https://cses.fi/problemset/task/1623/


import java.io.*;


class Sample {
	
	public static long ans =Long.MAX_VALUE;
	
	public static long mod (long a) {
		if (a<0) {
			return a * -1;
		}
		return a;
	}
	
	public static long min (long a,long b) {
		if (a<b) {
			return a;
		} else {
			return b;
		}
	}
	
	public static void getMin(long arr[],int i,int n,long l_sum,long r_sum) {
		if (i==n-1) {
			long diff1 = mod (l_sum-r_sum);
			long diff2 = mod ((l_sum-arr[i]) - (r_sum+arr[i]));
			
			long min_diff = min(diff1,diff2);
			
			if (min_diff < ans) {
				ans = min_diff;
			}
			
			return;
		}
		
		
		getMin(arr,i+1,n,l_sum,r_sum);
		getMin(arr,i+1,n,l_sum-arr[i],r_sum+arr[i]);
		
	}
	
	public static void main(String []args) throws Exception{
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		
		String s = br.readLine();
		
		long arr[] = new long[n];
		
		String [] temp = s.split(" ");
		
		long l_sum =0;
		for (int i=0;i<n;i++) {
			arr[i]=Long.parseLong(temp[i]);
			l_sum=l_sum+arr[i];			
		}
		
		getMin(arr,0,n,l_sum,0);
		
		
		System.out.println(ans);
		
		
	
		
		
		
		
	}	
}
